"use strict";

var _express = require("express");

var _express2 = _interopRequireDefault(_express);

var _mongoose = require("mongoose");

var _mongoose2 = _interopRequireDefault(_mongoose);

var _httpStatusCodes = require("http-status-codes");

var _httpStatusCodes2 = _interopRequireDefault(_httpStatusCodes);

var _api = require("./api");

var _development = require("./config/env/development");

var _globalMiddleware = require("./api/middlewares/global-middleware");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_mongoose2.default.Promise = global.Promise;
_mongoose2.default.connect("mongodb://localhost:27017/" + _development.devConfig.database);

var app = (0, _express2.default)();
var PORT = _development.devConfig.port;
(0, _globalMiddleware.setGlobalMiddleware)(app);
app.use("/api", _api.restRouter);
app.use(function (req, res, next) {
  var error = new Error("Invalid Route");
  error.status = _httpStatusCodes2.default.NOT_FOUND;
  next(error);
});

app.use(function (error, req, res, next) {
  res.status(error.status || _httpStatusCodes2.default.INTERNAL_SERVER_ERROR);
  return res.json({
    error: {
      message: error.message
    }
  });
});

app.get("/", function (req, res) {
  res.json({
    msg: "Welcome to invoice builder backend"
  });
});

app.get("/invoices", function (req, res) {
  res.json(invoices);
});

app.listen(PORT, function () {
  console.log("Server is running at PORT " + _development.devConfig.port);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9hcHAuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJQcm9taXNlIiwiZ2xvYmFsIiwiY29ubmVjdCIsImRldkNvbmZpZyIsImRhdGFiYXNlIiwiYXBwIiwiUE9SVCIsInBvcnQiLCJ1c2UiLCJyZXN0Um91dGVyIiwicmVxIiwicmVzIiwibmV4dCIsImVycm9yIiwiRXJyb3IiLCJzdGF0dXMiLCJIdHRwU3RhdHVzIiwiTk9UX0ZPVU5EIiwiSU5URVJOQUxfU0VSVkVSX0VSUk9SIiwianNvbiIsIm1lc3NhZ2UiLCJnZXQiLCJtc2ciLCJpbnZvaWNlcyIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQUEsbUJBQVNDLE9BQVQsR0FBbUJDLE9BQU9ELE9BQTFCO0FBQ0FELG1CQUFTRyxPQUFULGdDQUE4Q0MsdUJBQVVDLFFBQXhEOztBQUVBLElBQU1DLE1BQU0sd0JBQVo7QUFDQSxJQUFNQyxPQUFPSCx1QkFBVUksSUFBdkI7QUFDQSwyQ0FBb0JGLEdBQXBCO0FBQ0FBLElBQUlHLEdBQUosQ0FBUSxNQUFSLEVBQWdCQyxlQUFoQjtBQUNBSixJQUFJRyxHQUFKLENBQVEsVUFBQ0UsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFDMUIsTUFBTUMsUUFBUSxJQUFJQyxLQUFKLENBQVUsZUFBVixDQUFkO0FBQ0FELFFBQU1FLE1BQU4sR0FBZUMsMEJBQVdDLFNBQTFCO0FBQ0FMLE9BQUtDLEtBQUw7QUFDRCxDQUpEOztBQU1BUixJQUFJRyxHQUFKLENBQVEsVUFBQ0ssS0FBRCxFQUFRSCxHQUFSLEVBQWFDLEdBQWIsRUFBa0JDLElBQWxCLEVBQTJCO0FBQ2pDRCxNQUFJSSxNQUFKLENBQVdGLE1BQU1FLE1BQU4sSUFBZ0JDLDBCQUFXRSxxQkFBdEM7QUFDQSxTQUFPUCxJQUFJUSxJQUFKLENBQVM7QUFDZE4sV0FBTztBQUNMTyxlQUFTUCxNQUFNTztBQURWO0FBRE8sR0FBVCxDQUFQO0FBS0QsQ0FQRDs7QUFTQWYsSUFBSWdCLEdBQUosQ0FBUSxHQUFSLEVBQWEsVUFBQ1gsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDekJBLE1BQUlRLElBQUosQ0FBUztBQUNQRyxTQUFLO0FBREUsR0FBVDtBQUdELENBSkQ7O0FBTUFqQixJQUFJZ0IsR0FBSixDQUFRLFdBQVIsRUFBcUIsVUFBQ1gsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDakNBLE1BQUlRLElBQUosQ0FBU0ksUUFBVDtBQUNELENBRkQ7O0FBSUFsQixJQUFJbUIsTUFBSixDQUFXbEIsSUFBWCxFQUFpQixZQUFNO0FBQ3JCbUIsVUFBUUMsR0FBUixnQ0FBeUN2Qix1QkFBVUksSUFBbkQ7QUFDRCxDQUZEIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XHJcbmltcG9ydCBtb25nb29zZSBmcm9tIFwibW9uZ29vc2VcIjtcclxuaW1wb3J0IEh0dHBTdGF0dXMgZnJvbSBcImh0dHAtc3RhdHVzLWNvZGVzXCI7XHJcbmltcG9ydCB7IHJlc3RSb3V0ZXIgfSBmcm9tIFwiLi9hcGlcIjtcclxuaW1wb3J0IHsgZGV2Q29uZmlnIH0gZnJvbSBcIi4vY29uZmlnL2Vudi9kZXZlbG9wbWVudFwiO1xyXG5pbXBvcnQgeyBzZXRHbG9iYWxNaWRkbGV3YXJlIH0gZnJvbSBcIi4vYXBpL21pZGRsZXdhcmVzL2dsb2JhbC1taWRkbGV3YXJlXCI7XHJcblxyXG5tb25nb29zZS5Qcm9taXNlID0gZ2xvYmFsLlByb21pc2U7XHJcbm1vbmdvb3NlLmNvbm5lY3QoYG1vbmdvZGI6Ly9sb2NhbGhvc3Q6MjcwMTcvJHtkZXZDb25maWcuZGF0YWJhc2V9YCk7XHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcbmNvbnN0IFBPUlQgPSBkZXZDb25maWcucG9ydDtcclxuc2V0R2xvYmFsTWlkZGxld2FyZShhcHApO1xyXG5hcHAudXNlKFwiL2FwaVwiLCByZXN0Um91dGVyKTtcclxuYXBwLnVzZSgocmVxLCByZXMsIG5leHQpID0+IHtcclxuICBjb25zdCBlcnJvciA9IG5ldyBFcnJvcihcIkludmFsaWQgUm91dGVcIik7XHJcbiAgZXJyb3Iuc3RhdHVzID0gSHR0cFN0YXR1cy5OT1RfRk9VTkQ7XHJcbiAgbmV4dChlcnJvcik7XHJcbn0pO1xyXG5cclxuYXBwLnVzZSgoZXJyb3IsIHJlcSwgcmVzLCBuZXh0KSA9PiB7XHJcbiAgcmVzLnN0YXR1cyhlcnJvci5zdGF0dXMgfHwgSHR0cFN0YXR1cy5JTlRFUk5BTF9TRVJWRVJfRVJST1IpO1xyXG4gIHJldHVybiByZXMuanNvbih7XHJcbiAgICBlcnJvcjoge1xyXG4gICAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlXHJcbiAgICB9XHJcbiAgfSk7XHJcbn0pO1xyXG5cclxuYXBwLmdldChcIi9cIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgcmVzLmpzb24oe1xyXG4gICAgbXNnOiBcIldlbGNvbWUgdG8gaW52b2ljZSBidWlsZGVyIGJhY2tlbmRcIlxyXG4gIH0pO1xyXG59KTtcclxuXHJcbmFwcC5nZXQoXCIvaW52b2ljZXNcIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgcmVzLmpzb24oaW52b2ljZXMpO1xyXG59KTtcclxuXHJcbmFwcC5saXN0ZW4oUE9SVCwgKCkgPT4ge1xyXG4gIGNvbnNvbGUubG9nKGBTZXJ2ZXIgaXMgcnVubmluZyBhdCBQT1JUICR7ZGV2Q29uZmlnLnBvcnR9YCk7XHJcbn0pO1xyXG4iXX0=