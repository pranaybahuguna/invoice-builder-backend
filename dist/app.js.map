{"version":3,"sources":["../src/app.js"],"names":["mongoose","Promise","global","connect","app","PORT","use","express","json","router","req","res","next","error","Error","status","message","get","msg","invoices","listen","console","log"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACAA,mBAASC,OAAT,GAAmBC,OAAOD,OAA1B;AACAD,mBAASG,OAAT,CAAiB,2CAAjB;;AAEA,IAAMC,MAAM,wBAAZ;AACA,IAAMC,OAAO,IAAb;;AAEAD,IAAIE,GAAJ,CAAQC,kBAAQC,IAAR,EAAR;AACAJ,IAAIE,GAAJ,CAAQ,sBAAO,QAAP,CAAR;AACAF,IAAIE,GAAJ,CAAQ,MAAR,EAAgBG,cAAhB;AACAL,IAAIE,GAAJ,CAAQ,UAACI,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1B,MAAMC,QAAQ,IAAIC,KAAJ,CAAU,eAAV,CAAd;AACAD,QAAME,MAAN,GAAe,GAAf;AACAH,OAAKC,KAAL;AACD,CAJD;;AAMAT,IAAIE,GAAJ,CAAQ,UAACO,KAAD,EAAQH,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,EAA2B;AACjCD,MAAII,MAAJ,CAAWF,MAAME,MAAN,IAAgB,GAA3B;AACA,SAAOJ,IAAIH,IAAJ,CAAS;AACdK,WAAO;AACLG,eAASH,MAAMG;AADV;AADO,GAAT,CAAP;AAKD,CAPD;;AASAZ,IAAIa,GAAJ,CAAQ,GAAR,EAAa,UAACP,GAAD,EAAMC,GAAN,EAAc;AACzBA,MAAIH,IAAJ,CAAS;AACPU,SAAK;AADE,GAAT;AAGD,CAJD;;AAMAd,IAAIa,GAAJ,CAAQ,WAAR,EAAqB,UAACP,GAAD,EAAMC,GAAN,EAAc;AACjCA,MAAIH,IAAJ,CAASW,QAAT;AACD,CAFD;;AAIAf,IAAIgB,MAAJ,CAAWf,IAAX,EAAiB,YAAM;AACrBgB,UAAQC,GAAR,gCAAyCjB,IAAzC;AACD,CAFD","file":"app.js","sourcesContent":["import express from \"express\";\r\nimport mongoose from \"mongoose\";\r\nimport logger from \"morgan\";\r\nimport joi from \"joi\";\r\n\r\nimport { router } from \"./config/routes\";\r\nmongoose.Promise = global.Promise;\r\nmongoose.connect(\"mongodb://localhost:27017/invoice-builder\");\r\n\r\nconst app = express();\r\nconst PORT = 3000;\r\n\r\napp.use(express.json());\r\napp.use(logger(\"common\"));\r\napp.use(\"/api\", router);\r\napp.use((req, res, next) => {\r\n  const error = new Error(\"Invalid Route\");\r\n  error.status = 404;\r\n  next(error);\r\n});\r\n\r\napp.use((error, req, res, next) => {\r\n  res.status(error.status || 500);\r\n  return res.json({\r\n    error: {\r\n      message: error.message\r\n    }\r\n  });\r\n});\r\n\r\napp.get(\"/\", (req, res) => {\r\n  res.json({\r\n    msg: \"Welcome to invoice builder backend\"\r\n  });\r\n});\r\n\r\napp.get(\"/invoices\", (req, res) => {\r\n  res.json(invoices);\r\n});\r\n\r\napp.listen(PORT, () => {\r\n  console.log(`Server is running at PORT ${PORT}`);\r\n});\r\n"]}