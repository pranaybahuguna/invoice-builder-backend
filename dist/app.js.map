{"version":3,"sources":["../src/app.js"],"names":["mongoose","Promise","global","connect","app","PORT","use","express","json","swaggerUi","serve","setup","swaggerDocument","explorer","router","req","res","next","error","Error","status","HttpStatus","NOT_FOUND","INTERNAL_SERVER_ERROR","message","get","msg","invoices","listen","console","log"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACAA,mBAASC,OAAT,GAAmBC,OAAOD,OAA1B;AACAD,mBAASG,OAAT,CAAiB,2CAAjB;;AAEA,IAAMC,MAAM,wBAAZ;AACA,IAAMC,OAAO,IAAb;;AAEAD,IAAIE,GAAJ,CAAQC,kBAAQC,IAAR,EAAR;AACAJ,IAAIE,GAAJ,CAAQ,sBAAO,QAAP,CAAR;AACAF,IAAIE,GAAJ,CACE,WADF,EAEEG,2BAAUC,KAFZ,EAGED,2BAAUE,KAAV,CAAgBC,iBAAhB,EAAiC,EAAEC,UAAU,IAAZ,EAAjC,CAHF;AAKAT,IAAIE,GAAJ,CAAQ,MAAR,EAAgBQ,cAAhB;AACAV,IAAIE,GAAJ,CAAQ,UAACS,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1B,MAAMC,QAAQ,IAAIC,KAAJ,CAAU,eAAV,CAAd;AACAD,QAAME,MAAN,GAAeC,0BAAWC,SAA1B;AACAL,OAAKC,KAAL;AACD,CAJD;;AAMAd,IAAIE,GAAJ,CAAQ,UAACY,KAAD,EAAQH,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,EAA2B;AACjCD,MAAII,MAAJ,CAAWF,MAAME,MAAN,IAAgBC,0BAAWE,qBAAtC;AACA,SAAOP,IAAIR,IAAJ,CAAS;AACdU,WAAO;AACLM,eAASN,MAAMM;AADV;AADO,GAAT,CAAP;AAKD,CAPD;;AASApB,IAAIqB,GAAJ,CAAQ,GAAR,EAAa,UAACV,GAAD,EAAMC,GAAN,EAAc;AACzBA,MAAIR,IAAJ,CAAS;AACPkB,SAAK;AADE,GAAT;AAGD,CAJD;;AAMAtB,IAAIqB,GAAJ,CAAQ,WAAR,EAAqB,UAACV,GAAD,EAAMC,GAAN,EAAc;AACjCA,MAAIR,IAAJ,CAASmB,QAAT;AACD,CAFD;;AAIAvB,IAAIwB,MAAJ,CAAWvB,IAAX,EAAiB,YAAM;AACrBwB,UAAQC,GAAR,gCAAyCzB,IAAzC;AACD,CAFD","file":"app.js","sourcesContent":["import express from \"express\";\nimport mongoose from \"mongoose\";\nimport HttpStatus from \"http-status-codes\";\nimport logger from \"morgan\";\nimport swaggerUi from \"swagger-ui-express\";\nimport swaggerDocument from \"./config/swagger.json\";\n\nimport { router } from \"./config/routes\";\nmongoose.Promise = global.Promise;\nmongoose.connect(\"mongodb://localhost:27017/invoice-builder\");\n\nconst app = express();\nconst PORT = 3000;\n\napp.use(express.json());\napp.use(logger(\"common\"));\napp.use(\n  \"/api-docs\",\n  swaggerUi.serve,\n  swaggerUi.setup(swaggerDocument, { explorer: true })\n);\napp.use(\"/api\", router);\napp.use((req, res, next) => {\n  const error = new Error(\"Invalid Route\");\n  error.status = HttpStatus.NOT_FOUND;\n  next(error);\n});\n\napp.use((error, req, res, next) => {\n  res.status(error.status || HttpStatus.INTERNAL_SERVER_ERROR);\n  return res.json({\n    error: {\n      message: error.message\n    }\n  });\n});\n\napp.get(\"/\", (req, res) => {\n  res.json({\n    msg: \"Welcome to invoice builder backend\"\n  });\n});\n\napp.get(\"/invoices\", (req, res) => {\n  res.json(invoices);\n});\n\napp.listen(PORT, () => {\n  console.log(`Server is running at PORT ${PORT}`);\n});\n"]}