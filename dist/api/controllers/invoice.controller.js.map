{"version":3,"sources":["../../../src/api/controllers/invoice.controller.js"],"names":["dummyInvoices","_id","item","qty","date","Date","findAll","req","res","next","Invoice","find","then","json","invoices","catch","status","HttpStatus","INTERNAL_SERVER_ERROR","err","create","schema","Joi","object","keys","string","required","number","integer","due","tax","optional","rate","validate","body","error","value","details","BAD_REQUEST","message","invoice","findOne","id","params","findById","NOT_FOUND","delete","findByIdAndRemove","update","findOneAndUpdate","new"],"mappings":"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","file":"invoice.controller.js","sourcesContent":["import Invoice from \"../models/invoice.model\";\nimport Joi from \"joi\";\nimport HttpStatus from \"http-status-codes\";\n\nconst dummyInvoices = [\n  { _id: \"123432\", item: \"Amazon Product\", qty: 10, date: new Date() },\n  { _id: \"123443\", item: \"Google Product\", qty: 14, date: new Date() },\n  { _id: \"123421\", item: \"Ebay Product\", qty: 11, date: new Date() }\n];\n\nexport default {\n  findAll(req, res, next) {\n    Invoice.find()\n      .then(invoices => res.json(invoices))\n      .catch(err => res.status(HttpStatus.INTERNAL_SERVER_ERROR).json(err));\n  },\n  create(req, res) {\n    const schema = Joi.object().keys({\n      item: Joi.string().required(),\n      qty: Joi.number()\n        .integer()\n        .required(),\n      date: Joi.date().required(),\n      due: Joi.date().required(),\n      tax: Joi.number().optional(),\n      rate: Joi.number().optional()\n    });\n    const { error, value } = Joi.validate(req.body, schema);\n    if (error && error.details) {\n      return res.status(HttpStatus.BAD_REQUEST).json(error.message);\n    }\n    Invoice.create(value)\n      .then(invoice => {\n        res.json(invoice);\n      })\n      .catch(err => res.status(HttpStatus.INTERNAL_SERVER_ERROR).json(err));\n  },\n  findOne(req, res) {\n    let { id } = req.params;\n    Invoice.findById(id)\n      .then(invoice => {\n        if (!invoice) {\n          return res\n            .status(HttpStatus.NOT_FOUND)\n            .json({ err: \"invoice id not found\" });\n        }\n        return res.json(invoice);\n      })\n      .catch(err => {\n        res.status(HttpStatus.INTERNAL_SERVER_ERROR).json(err);\n      });\n  },\n  delete(req, res) {\n    const { id } = req.params;\n    Invoice.findByIdAndRemove(id)\n      .then(invoice => {\n        if (!invoice) {\n          return res\n            .status(HttpStatus.NOT_FOUND)\n            .json({ err: \"invoice id not found\" });\n        }\n        return res.json(invoice);\n      })\n      .catch(err => {\n        res.status(HttpStatus.INTERNAL_SERVER_ERROR).json(err);\n      });\n  },\n  update(req, res) {\n    const { id } = req.params;\n    const schema = Joi.object().keys({\n      item: Joi.string().optional(),\n      qty: Joi.number()\n        .integer()\n        .optional(),\n      date: Joi.date().optional(),\n      due: Joi.date().optional(),\n      tax: Joi.number().optional(),\n      rate: Joi.number().optional()\n    });\n    const { error, value } = Joi.validate(req.body, schema);\n    if (error && error.details) {\n      return res.status(HttpStatus.BAD_REQUEST).json(error.message);\n    }\n    Invoice.findOneAndUpdate({ _id: id }, value, { new: true })\n      .then(invoice => {\n        res.json(invoice);\n      })\n      .catch(err => res.status(HttpStatus.INTERNAL_SERVER_ERROR).json(err));\n  }\n};\n"]}