"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    getTotal: function getTotal(invoice) {
        var total = 0;
        var subTotal = 0;

        if (typeof invoice.qty !== "undefined" && typeof invoice.rate !== "undefined") {
            total = invoice.qty * invoice.rate;
        }
        var salesTax = 0;
        if (typeof invoice.tax !== "undefined") {
            salesTax = total * invoice.tax / 100;
        }
        subTotal = total + salesTax;
        return { total: total, subTotal: subTotal };
    },
    getTemplateBody: function getTemplateBody(invoice, subTotal, total, user) {
        var templateBody = "\n    <div class=\"container\">\n  <div class=\"row\">\n      <div class=\"col-xs-6\">\n      </div>\n      <div class=\"col-xs-6 text-right\">\n          <h1>INVOICE</h1>\n          <h1>\n              <small>" + invoice.item + "</small>\n          </h1>\n      </div>\n  </div>\n  <div class=\"row\">\n      <div class=\"col-xs-5\">\n          <div class=\"panel panel-default\">\n              <div class=\"panel-heading\">\n                  <h4>From:\n                      <a>" + user.name + "</a>\n                  </h4>\n              </div>\n              <div class=\"panel-body\">\n                  <p>\n                      " + user.email + "\n                      <br>\n                  </p>\n              </div>\n          </div>\n      </div>\n      <div class=\"col-xs-5 col-xs-offset-2 text-right\">\n          <div class=\"panel panel-default\">\n              <div class=\"panel-heading\">\n                  <h4>To :\n                      <a>" + invoice.client.firstName + " " + invoice.client.lastName + "</a>\n                  </h4>\n              </div>\n              <div class=\"panel-body\">\n                  <p>\n                      " + invoice.client.email + "\n                      <br>\n                  </p>\n              </div>\n          </div>\n      </div>\n  </div>\n  <table class=\"table table-bordered\">\n      <thead>\n          <tr>\n              <th>\n                  <h4>Qty</h4>\n              </th>\n              <th>\n                  <h4>Rate</h4>\n              </th>\n              <th>\n                  <h4>Tax</h4>\n              </th>\n          </tr>\n      </thead>\n      <tbody>\n          <tr>\n              <td>" + invoice.qty + "</td>\n              <td>" + invoice.rate + "</td>\n              <td>\n                  " + invoice.tax + "\n              </td>\n          </tr>\n      </tbody>\n  </table>\n  <div class=\"row text-right\">\n      <div class=\"col-xs-2 col-xs-offset-8\">\n          <p>\n              <strong>\n                  Sub Total :\n                  <br> TAX :\n                  <br> Total :\n                  <br>\n              </strong>\n          </p>\n      </div>\n      <div class=\"col-xs-2\">\n          <strong>\n              $" + subTotal + "\n              <br> $" + invoice.tax + "\n              <br> $" + total + "\n              <br>\n          </strong>\n      </div>\n  </div>\n</div>\n    ";
        return templateBody;
    },
    getInvoiceTemplate: function getInvoiceTemplate(templateBody, subTotal, total) {
        var html = "\n    <html>\n    <head>\n    <title> Invoice </title>\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n     <style>\n     @import url(http://fonts.googleapis.com/css?family=Bree+Serif);\n     body, h1, h2, h3, h4, h5, h6{\n     font-family: 'Bree Serif', serif;\n     }\n     </style>\n    </head>\n\n    <body>\n       " + templateBody + "\n    </body>\n    </html>\n    ";
        return html;
    }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hcGkvcmVzb3VyY2VzL2ludm9pY2UvaW52b2ljZS5zZXJ2aWNlLmpzIl0sIm5hbWVzIjpbImdldFRvdGFsIiwiaW52b2ljZSIsInRvdGFsIiwic3ViVG90YWwiLCJxdHkiLCJyYXRlIiwic2FsZXNUYXgiLCJ0YXgiLCJnZXRUZW1wbGF0ZUJvZHkiLCJ1c2VyIiwidGVtcGxhdGVCb2R5IiwiaXRlbSIsIm5hbWUiLCJlbWFpbCIsImNsaWVudCIsImZpcnN0TmFtZSIsImxhc3ROYW1lIiwiZ2V0SW52b2ljZVRlbXBsYXRlIiwiaHRtbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7a0JBQWU7QUFDYkEsWUFEYSxvQkFDSkMsT0FESSxFQUNLO0FBQ2hCLFlBQUlDLFFBQVEsQ0FBWjtBQUNBLFlBQUlDLFdBQVcsQ0FBZjs7QUFFQSxZQUNFLE9BQU9GLFFBQVFHLEdBQWYsS0FBdUIsV0FBdkIsSUFDQSxPQUFPSCxRQUFRSSxJQUFmLEtBQXdCLFdBRjFCLEVBR0U7QUFDQUgsb0JBQVFELFFBQVFHLEdBQVIsR0FBY0gsUUFBUUksSUFBOUI7QUFDRDtBQUNELFlBQUlDLFdBQVcsQ0FBZjtBQUNBLFlBQUksT0FBT0wsUUFBUU0sR0FBZixLQUF1QixXQUEzQixFQUF3QztBQUN0Q0QsdUJBQVlKLFFBQVFELFFBQVFNLEdBQWpCLEdBQXdCLEdBQW5DO0FBQ0Q7QUFDREosbUJBQVdELFFBQVFJLFFBQW5CO0FBQ0EsZUFBTyxFQUFFSixZQUFGLEVBQVNDLGtCQUFULEVBQVA7QUFDRCxLQWpCWTtBQWtCYkssbUJBbEJhLDJCQWtCR1AsT0FsQkgsRUFrQllFLFFBbEJaLEVBa0JzQkQsS0FsQnRCLEVBa0I2Qk8sSUFsQjdCLEVBa0JtQztBQUM5QyxZQUFNQyxzT0FRYVQsUUFBUVUsSUFSckIsb1FBaUJpQkYsS0FBS0csSUFqQnRCLG9KQXNCY0gsS0FBS0ksS0F0Qm5CLGdVQWdDaUJaLFFBQVFhLE1BQVIsQ0FBZUMsU0FoQ2hDLFNBaUNKZCxRQUFRYSxNQUFSLENBQWVFLFFBakNYLG9KQXVDY2YsUUFBUWEsTUFBUixDQUFlRCxLQXZDN0IscWZBOERVWixRQUFRRyxHQTlEbEIsaUNBK0RVSCxRQUFRSSxJQS9EbEIscURBaUVVSixRQUFRTSxHQWpFbEIsb2JBbUZPSixRQW5GUCw4QkFvRllGLFFBQVFNLEdBcEZwQiw4QkFxRllMLEtBckZaLG9GQUFOO0FBNEZBLGVBQU9RLFlBQVA7QUFDRCxLQWhIWTtBQWlIYk8sc0JBakhhLDhCQWlITVAsWUFqSE4sRUFpSG9CUCxRQWpIcEIsRUFpSDhCRCxLQWpIOUIsRUFpSHFDO0FBQ2hELFlBQU1nQiwyWUFjRFIsWUFkQyxxQ0FBTjtBQWtCQSxlQUFPUSxJQUFQO0FBQ0Q7QUFySVksQyIsImZpbGUiOiJpbnZvaWNlLnNlcnZpY2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gIGdldFRvdGFsKGludm9pY2UpIHtcbiAgICBsZXQgdG90YWwgPSAwO1xuICAgIGxldCBzdWJUb3RhbCA9IDA7XG5cbiAgICBpZiAoXG4gICAgICB0eXBlb2YgaW52b2ljZS5xdHkgIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICAgIHR5cGVvZiBpbnZvaWNlLnJhdGUgIT09IFwidW5kZWZpbmVkXCJcbiAgICApIHtcbiAgICAgIHRvdGFsID0gaW52b2ljZS5xdHkgKiBpbnZvaWNlLnJhdGU7XG4gICAgfVxuICAgIGxldCBzYWxlc1RheCA9IDA7XG4gICAgaWYgKHR5cGVvZiBpbnZvaWNlLnRheCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgc2FsZXNUYXggPSAodG90YWwgKiBpbnZvaWNlLnRheCkgLyAxMDA7XG4gICAgfVxuICAgIHN1YlRvdGFsID0gdG90YWwgKyBzYWxlc1RheDtcbiAgICByZXR1cm4geyB0b3RhbCwgc3ViVG90YWwgfTtcbiAgfSxcbiAgZ2V0VGVtcGxhdGVCb2R5KGludm9pY2UsIHN1YlRvdGFsLCB0b3RhbCwgdXNlcikge1xuICAgIGNvbnN0IHRlbXBsYXRlQm9keSA9IGBcbiAgICA8ZGl2IGNsYXNzPVwiY29udGFpbmVyXCI+XG4gIDxkaXYgY2xhc3M9XCJyb3dcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJjb2wteHMtNlwiPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPVwiY29sLXhzLTYgdGV4dC1yaWdodFwiPlxuICAgICAgICAgIDxoMT5JTlZPSUNFPC9oMT5cbiAgICAgICAgICA8aDE+XG4gICAgICAgICAgICAgIDxzbWFsbD4ke2ludm9pY2UuaXRlbX08L3NtYWxsPlxuICAgICAgICAgIDwvaDE+XG4gICAgICA8L2Rpdj5cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9XCJyb3dcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJjb2wteHMtNVwiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJwYW5lbCBwYW5lbC1kZWZhdWx0XCI+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwYW5lbC1oZWFkaW5nXCI+XG4gICAgICAgICAgICAgICAgICA8aDQ+RnJvbTpcbiAgICAgICAgICAgICAgICAgICAgICA8YT4ke3VzZXIubmFtZX08L2E+XG4gICAgICAgICAgICAgICAgICA8L2g0PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBhbmVsLWJvZHlcIj5cbiAgICAgICAgICAgICAgICAgIDxwPlxuICAgICAgICAgICAgICAgICAgICAgICR7dXNlci5lbWFpbH1cbiAgICAgICAgICAgICAgICAgICAgICA8YnI+XG4gICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPVwiY29sLXhzLTUgY29sLXhzLW9mZnNldC0yIHRleHQtcmlnaHRcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwicGFuZWwgcGFuZWwtZGVmYXVsdFwiPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGFuZWwtaGVhZGluZ1wiPlxuICAgICAgICAgICAgICAgICAgPGg0PlRvIDpcbiAgICAgICAgICAgICAgICAgICAgICA8YT4ke2ludm9pY2UuY2xpZW50LmZpcnN0TmFtZX0gJHtcbiAgICAgIGludm9pY2UuY2xpZW50Lmxhc3ROYW1lXG4gICAgfTwvYT5cbiAgICAgICAgICAgICAgICAgIDwvaDQ+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGFuZWwtYm9keVwiPlxuICAgICAgICAgICAgICAgICAgPHA+XG4gICAgICAgICAgICAgICAgICAgICAgJHtpbnZvaWNlLmNsaWVudC5lbWFpbH1cbiAgICAgICAgICAgICAgICAgICAgICA8YnI+XG4gICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gIDwvZGl2PlxuICA8dGFibGUgY2xhc3M9XCJ0YWJsZSB0YWJsZS1ib3JkZXJlZFwiPlxuICAgICAgPHRoZWFkPlxuICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgPHRoPlxuICAgICAgICAgICAgICAgICAgPGg0PlF0eTwvaDQ+XG4gICAgICAgICAgICAgIDwvdGg+XG4gICAgICAgICAgICAgIDx0aD5cbiAgICAgICAgICAgICAgICAgIDxoND5SYXRlPC9oND5cbiAgICAgICAgICAgICAgPC90aD5cbiAgICAgICAgICAgICAgPHRoPlxuICAgICAgICAgICAgICAgICAgPGg0PlRheDwvaDQ+XG4gICAgICAgICAgICAgIDwvdGg+XG4gICAgICAgICAgPC90cj5cbiAgICAgIDwvdGhlYWQ+XG4gICAgICA8dGJvZHk+XG4gICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICA8dGQ+JHtpbnZvaWNlLnF0eX08L3RkPlxuICAgICAgICAgICAgICA8dGQ+JHtpbnZvaWNlLnJhdGV9PC90ZD5cbiAgICAgICAgICAgICAgPHRkPlxuICAgICAgICAgICAgICAgICAgJHtpbnZvaWNlLnRheH1cbiAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICA8L3RyPlxuICAgICAgPC90Ym9keT5cbiAgPC90YWJsZT5cbiAgPGRpdiBjbGFzcz1cInJvdyB0ZXh0LXJpZ2h0XCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiY29sLXhzLTIgY29sLXhzLW9mZnNldC04XCI+XG4gICAgICAgICAgPHA+XG4gICAgICAgICAgICAgIDxzdHJvbmc+XG4gICAgICAgICAgICAgICAgICBTdWIgVG90YWwgOlxuICAgICAgICAgICAgICAgICAgPGJyPiBUQVggOlxuICAgICAgICAgICAgICAgICAgPGJyPiBUb3RhbCA6XG4gICAgICAgICAgICAgICAgICA8YnI+XG4gICAgICAgICAgICAgIDwvc3Ryb25nPlxuICAgICAgICAgIDwvcD5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz1cImNvbC14cy0yXCI+XG4gICAgICAgICAgPHN0cm9uZz5cbiAgICAgICAgICAgICAgJCR7c3ViVG90YWx9XG4gICAgICAgICAgICAgIDxicj4gJCR7aW52b2ljZS50YXh9XG4gICAgICAgICAgICAgIDxicj4gJCR7dG90YWx9XG4gICAgICAgICAgICAgIDxicj5cbiAgICAgICAgICA8L3N0cm9uZz5cbiAgICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvZGl2PlxuICAgIGA7XG4gICAgcmV0dXJuIHRlbXBsYXRlQm9keTtcbiAgfSxcbiAgZ2V0SW52b2ljZVRlbXBsYXRlKHRlbXBsYXRlQm9keSwgc3ViVG90YWwsIHRvdGFsKSB7XG4gICAgY29uc3QgaHRtbCA9IGBcbiAgICA8aHRtbD5cbiAgICA8aGVhZD5cbiAgICA8dGl0bGU+IEludm9pY2UgPC90aXRsZT5cbiAgICA8bGluayBocmVmPVwiaHR0cHM6Ly9tYXhjZG4uYm9vdHN0cmFwY2RuLmNvbS9ib290c3RyYXAvMy4zLjcvY3NzL2Jvb3RzdHJhcC5taW4uY3NzXCIgcmVsPVwic3R5bGVzaGVldFwiPlxuICAgICA8c3R5bGU+XG4gICAgIEBpbXBvcnQgdXJsKGh0dHA6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PUJyZWUrU2VyaWYpO1xuICAgICBib2R5LCBoMSwgaDIsIGgzLCBoNCwgaDUsIGg2e1xuICAgICBmb250LWZhbWlseTogJ0JyZWUgU2VyaWYnLCBzZXJpZjtcbiAgICAgfVxuICAgICA8L3N0eWxlPlxuICAgIDwvaGVhZD5cblxuICAgIDxib2R5PlxuICAgICAgICR7dGVtcGxhdGVCb2R5fVxuICAgIDwvYm9keT5cbiAgICA8L2h0bWw+XG4gICAgYDtcbiAgICByZXR1cm4gaHRtbDtcbiAgfVxufTtcbiJdfQ==